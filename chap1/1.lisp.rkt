(define (square x)
  (* x x))
(define (sum-of-square x y)
  (+ (square x) (square y)))
;;(sum-of-square 3 4)
;;(sum-of-square 3 4)
;;(+ 3 4)
;;(abs( - 3))
(+ 3 4)
(define (good-enough guess x)
  (< (abs (- (square guess) x)) 0.001)
  )
(define (averg a b)
  (/ (+ a b) 2)
)
(define (improve guess x)
  (averg guess (/ x guess))
)
(define (sqrt-iter guess x) 
  (if (good-enough guess x)
      guess
      (sqrt-iter (improve guess x) x)
  )
)
(define (sqrt1 x)
  (sqrt-iter 1 x )  
)
(sqrt1 2.0)
(sqrt1 3.0)
(sqrt1 4.0)